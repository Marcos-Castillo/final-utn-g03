@startuml
!define ENTITY entity
!define RELATION association

class Cliente {
    - ID del cliente
    - Razón social
    - CUIT
    - Contacto principal
    - Teléfono
    - Email
    + contratarServicio(servicio: Servicio)
    + reportarIncidente(detalle: Problema): Incidente
}

class Operador {
    - ID del operador<<Id>>
    - Nombre
    - Apellido
    - Teléfono
    - Email
    - Usuario
    - Contraseña
    + registrarIncidente(incidente: Incidente)
}

class Técnico {
    - ID del técnico
    - Nombre
    - Apellido
    - Especialidades (relación a tabla de Especialidades)
    - Medio de notificación preferido (Email, WhatsApp)
    - Tiempo estimado de resolución por defecto
    + asignarIncidente(incidente: Incidente)
    + resolverIncidente(incidente: Incidente)
}

class Incidente {
    - ID del incidente
    - Fecha de reporte
    - Fecha posible de resolución
    - Estado del incidente (Abierto, Resuelto)
    - Colchón de horas estimadas
    - Técnico asignado (relación a tabla de Técnicos)
    - Cliente (relación a tabla de Clientes)
    - Problemas (relación a tabla de Problema)
    + confirmarIncidente(): void
    + notificarTécnico(): void
}

class Problema {
    - ID Problema
    - Descripción detallada del problema
    - Tipo del problema (relación a tabla de TipoProblema)
    - Incidente relacionado (relación a tabla de Incidente)
}

class Servicio {
    - ID del servicio
    - Nombre del servicio
    - Descripción del servicio
    - Especialidad
}

class Especialidad {
    - ID de la especialidad
    - Nombre de la especialidad
}

class TipoProblema {
    - ID del tipo de problema
    - Nombre del tipo de problema
    - Tiempo máximo de resolución
}

class Notificación {
    - ID de la notificación
    - Contenido de la notificación
    - Técnico destinatario (relación a tabla de Técnicos)
    - Fecha de envío
}

Cliente --|> Servicio : contratarServicio()
Cliente --|> Incidente : reportarIncidente()
Técnico --|> Especialidad : asignarIncidente()
Técnico --|> Notificación : resolverIncidente()
Cliente --|> Notificación : notificarTécnico()
Incidente --|> Técnico : asignarIncidente()
Incidente --|> Problema : confirmarIncidente()
Problema --|> TipoProblema : confirmarIncidente()
Operador --|> Incidente : registrarIncidente()
@enduml
